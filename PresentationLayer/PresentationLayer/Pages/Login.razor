@page "/Login"
@using PresentationLayer.Authentication
@using System.ComponentModel.DataAnnotations
@using System.Text

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
<h3 class="text-center mb-5 mt-5">Login</h3>

<AuthorizeView>
    <NotAuthorized>
        <div class="d-flex flex-column justify-content-around align-items-center">
            <div class="form-group">
                <label class="d-block">User name:</label>
                <input type="text" placeholder="user name" @bind-value="username"/>
            </div>
            <div class="form-group">
                <label class="d-block">Password</label>
                <input type="password" placeholder="password" @bind-value="password"/>
            </div>
            <div style="color:red">@errorMessage</div>
            <button class="btn btn-outline-dark">
                <a href="" @onclick="PerformLogin">
                    Login
                </a>
            </button>
        </div>
    </NotAuthorized>
    <Authorized>
        <button class="btn btn-outline-dark">
            <a href="" @onclick="PerformLogout">
                Log out
            </a>
        </button>
    </Authorized>
</AuthorizeView>


@code {
    private string username;
    private string password;
    private string errorMessage;

    private async Task PerformLogin()
    {
        errorMessage = "";
        try
        {
            if (new StringBuilder(username).Length == 6)
            {
                await ((CustomAuthenticationStateProvider) AuthenticationStateProvider).ValidateLogin(username, password);
                username = "";
                password = "";
            }
            else
            {
                throw new Exception("Username should be 6 char long");
            }
        }
        catch (Exception e)
        {
            errorMessage = e.Message;
        }
    }

    private async Task PerformLogout()
    {
        errorMessage = "";
        username = "";
        password = "";
        try
        {
            ((CustomAuthenticationStateProvider) AuthenticationStateProvider).Logout();
            NavigationManager.NavigateTo("/");
        }
        catch (Exception e)
        {
            errorMessage = e.Message;
        }
    }

}